.container
  %h3= t(".title")
  %hr/

  .mb-3
    = render "devise/shared/error_messages", resource: resource

  %ul.nav.nav-tabs.mb-3{role: "tablist"}
    %li.nav-item
      %a#edit-profile-tab.nav-link.active{"aria-controls" => "edit-profile", "aria-selected" => "true", "data-toggle" => "tab", href: "#edit-profile", role: "tab"}= t(".profile.title")
    %li.nav-item
      %a#change-email-tab.nav-link{"aria-controls" => "change-email", "aria-selected" => "false", "data-toggle" => "tab", href: "#change-email", role: "tab"}= t(".email.title")
    %li.nav-item
      %a#change-password-tab.nav-link{"aria-controls" => "change-password", "aria-selected" => "false", "data-toggle" => "tab", href: "#change-password", role: "tab"}= t(".password.title")

  .tab-content
    #edit-profile.tab-pane.fade.show.active{:"aria-labelledby" => "edit-profile-tab", role: "tabpanel"}
      .row
        .col.pull-left
          = form_for resource, as: resource_name, url: registration_path(resource_name) do |f|
            = f.fields_for :profile do |profile|
              %h4= t(".profile.profile-picture")
              .form-group
                - if resource.profile&.profile_picture_data.present?
                  .mb-3
                    = image_tag resource.profile.profile_picture_url,
                      class: "img-fluid rounded",
                      style: "max-width: 350px; max-height: 350px; object-fit: cover; border: 1px solid #5e6162; padding: 4px; background-color: #000000;"
                .file-input-group
                  = profile.hidden_field :profile_picture, value: resource.profile&.cached_profile_picture_data, id: nil
                  = profile.file_field :profile_picture, accept: "image/png, image/jpeg", class: "form-control-file"
              %h6= t(".profile.gender")
              .form-group
                .input-group
                  = profile.text_field :gender, :placeholder => t(".profile.gender"), :autocomplete => 'gender', :class => 'form-control'
              %h6
                = t(".profile.nationality.title")
                %small
                  = t(".profile.nationality.small")
              .field.form-group
                = f.country_select :country, {:include_blank => true}, {:class => "form-control"}
              %h6
                = t(".profile.location")
              .form-group
                .input-group
                  = profile.text_field :location, :placeholder => t(".profile.location"), :autocomplete => 'location', :class => 'form-control'
              %h6
                = t(".profile.occupation")
              .form-group
                .input-group
                  = profile.text_field :occupation, :placeholder => t(".profile.occupation"), :autocomplete => 'occupation', :class => 'form-control'
              %h6
                = t(".profile.interests")
              .form-group
                .input-group
                  = profile.text_field :interests, :placeholder => t(".profile.interests"), :autocomplete => 'interests', :class => 'form-control'
              %h6
                = t(".profile.public-email")
              .form-group
                .input-group
                  = profile.text_field :public_email, :placeholder => t(".profile.public-email"), :autocomplete => 'public_email', :class => 'form-control'
              %h6 Discord
              .form-group
                .input-group
                  = profile.text_field :discord, :placeholder => 'Discord', :autocomplete => 'discord', :class => 'form-control'
              .form-group
                .input-group
                  .input-group-prepend
                    .input-group-text.devise-form-input-prepend instagram.com/
                  = profile.text_field :instagram, :autocomplete => 'instagram', :class => 'form-control'
              .form-group
                .input-group
                  .input-group-prepend
                    .input-group-text.devise-form-input-prepend twitter.com/
                  = profile.text_field :twitter, :autocomplete => 'twitter', :class => 'form-control'
              .form-group
                .input-group
                  .input-group-prepend
                    .input-group-text.devise-form-input-prepend github.com/
                  = profile.text_field :github, :class => 'form-control'
              .form-group
                .input-group
                  .input-group-prepend
                    .input-group-text.devise-form-input-prepend crowdin.com/profile/
                  = profile.text_field :crowdin, :autocomplete => 'crowdin', :class => 'form-control'
              .form-group
                .input-group
                  .input-group-prepend
                    .input-group-text.devise-form-input-prepend steamcommunity.com/id/
                  = profile.text_field :steam, :autocomplete => 'steam', :class => 'form-control'
              %h6
                = t(".profile.about-me.title")
              .row
                .form-group
                  = profile.text_area :about, :placeholder => t(".profile.about-me.placeholder"), :autocomplete => 'about_me', :class => 'form-control'
              .form-group
                .input-group
                  = f.password_field :current_password, :placeholder => t(".current-password"), :class => 'form-control'
              .btn-toolbar
                .actions
                  = f.submit t(".update"), :class => 'btn btn-sm'

    #change-email.tab-pane.fade.show{:"aria-labelledby" => "change-email-tab", role: "tabpanel"}
      .row
        .col-md-5
          %h4
            = t(".email.title")
          = form_for(resource, as: resource_name, url: registration_path(resource_name), html: { method: :put }) do |f|
            .form-group
              .input-group
                = f.email_field :email, autofocus: true, :placeholder => t(".email.new"), :class => 'form-control'
            - if devise_mapping.confirmable? && resource.pending_reconfirmation?
              .devise-text-pleasant
                %i.fa.fa-exclamation-triangle{"aria-hidden" => "true"}
                = t('.currently_waiting_confirmation_for_email', :email => resource.unconfirmed_email)
            .form-group
              .input-group
                = f.password_field :current_password, :placeholder => t(".current-password"), :class => 'form-control'
            .field.form-group
              = recaptcha_tags
            .btn-toolbar
              .actions
                = f.submit t(".update"), :class => 'btn btn-sm'

    #change-password.tab-pane.fade.show{:"aria-labelledby" => "change-password-tab", role: "tabpanel"}
      .row
        .col-md-5
          %h4
            = t(".password.title")
          = form_for(resource, as: resource_name, url: registration_path(resource_name), html: { method: :put }) do |f|
            .form-group
              .input-group
                - if @minimum_password_length
                  = f.password_field :password, autocomplete: "new-password", :placeholder => t(".password.new-length", length: @minimum_password_length) , :class => 'form-control'
                - else
                  = f.password_field :password, autocomplete: "new-password", :placeholder => t(".password.new"), :class => 'form-control'
            .form-group
              .input-group
                = f.password_field :password_confirmation, autocomplete: "new-password", :placeholder => t(".password.confirm"), :class => 'form-control'
            .form-group
              .input-group
                = f.password_field :current_password, autocomplete: "current-password", :placeholder => t(".current-password"), :class => 'form-control'
            .btn-toolbar
              .actions
                = f.submit t(".update"), :class => 'btn btn-sm'
